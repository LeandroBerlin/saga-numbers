{"version":3,"sources":["logo.svg","sagas/index.js","actions/actionTypes.js","reducers/index.js","store/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","watcherSaga","workerSaga","regenerator_default","a","wrap","_context","prev","next","takeLatest","stop","_marked","fetchNumber","num","axios","method","url","concat","action","response","message","_context2","console","log","number","call","sent","data","put","type","t0","error","_marked2","API_CALL_REQUEST","API_CALL_SUCCESS","API_CALL_FAILURE","initialState","fetching","sagaMiddleware","createSagaMiddleware","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","state","arguments","length","undefined","Object","objectSpread","compose","applyMiddleware","run","connect","dispatch","onRequestNumber","props","numRef","useRef","react_default","createElement","className","src","logo","alt","defaultValue","ref","onClick","current","value","style","color","rel","target","href","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b4aec141.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3a0fcb80.svg\";","// import saga\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nexport function* watcherSaga() {\n    yield takeLatest(\"API_CALL_REQUEST\", workerSaga);\n}\n\n// function that makes the api request and returns a Promise for response\nfunction fetchNumber(num) {\n    return axios({\n        method: \"get\",\n        url: `https://numbers-api-proxy.dci-fbw121.now.sh/?number=${num}`\n    });\n\n}\n\n// worker saga: makes the api call when watcher saga sees the action\nfunction* workerSaga(action) {\n    console.log(action.number)\n    try {\n        const response = yield call(fetchNumber, action.number);\n        console.log(response.data)\n        const message = response.data;\n\n        // dispatch a success action to the store with the new dog\n        yield put({ type: \"API_CALL_SUCCESS\", message });\n\n    } catch (error) {\n        // dispatch a failure action to the store with the error\n        yield put({ type: \"API_CALL_FAILURE\", error });\n    }\n}","// action types\nexport const API_CALL_REQUEST = \"API_CALL_REQUEST\";\nexport const API_CALL_SUCCESS = \"API_CALL_SUCCESS\";\nexport const API_CALL_FAILURE = \"API_CALL_FAILURE\";","//import the actions we defined\nimport { API_CALL_REQUEST, API_CALL_SUCCESS, API_CALL_FAILURE } from '../actions/actionTypes'\n\n// define an initial state\nconst initialState = {\n    fetching: false,\n    message: null,\n    error: null\n};\n\n// the reducer\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case API_CALL_REQUEST:\n            return { ...state, fetching: true, error: null, number: action.number };\n        case API_CALL_SUCCESS:\n            return { ...state, fetching: false, message: action.message };\n        case API_CALL_FAILURE:\n            return { ...state, fetching: false, message: null, error: action.error };\n        default:\n            return state;\n    }\n}","// import Redux store methods\nimport { createStore, applyMiddleware, compose } from 'redux'\n// import Saga middleware\nimport createSagaMiddleware from 'redux-saga'\n// import watcher from saga file we created\nimport { watcherSaga } from '../sagas'\n// import the Reducer\nimport { reducer } from '../reducers'\n\n// create a Saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// dev tools middleware\nconst reduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n// create a Redux store using the Reducer and connect the Saga middleware to the Redux store + DevTools\nexport const store = createStore(\n    reducer,\n    compose(applyMiddleware(sagaMiddleware), reduxDevTools)\n);\n\n// run the watcher\nsagaMiddleware.run(watcherSaga);\n","import React, { useRef } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\n\n// import React bindings for Redux\nimport { connect } from \"react-redux\";\n\nconst App = (props) => {\n\n  // Destructuring assignment from Props\n  const { fetching, message, onRequestNumber, error } = props;\n\n  // UseRef hook\n  const numRef = useRef(null);\n  //Dan Says -> https://twitter.com/dan_abramov/status/1011238901254639616\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">Numbers</h1>\n        {message &&\n          <blockquote>{message}</blockquote>\n        }\n\n        <div>\n          <i className=\"App-intro\">Insert a number</i>\n          <p><input defaultValue=\"23\" ref={numRef} type=\"number\"></input></p>\n        </div>\n\n        {fetching ? (\n          <button className=\"btn btn-success\">Fetching...</button>\n        ) : (\n            <button className=\"btn btn-primary\" onClick={() => onRequestNumber(numRef.current.value)}>Show info about this number</button>\n          )}\n\n        {error && <p style={{ color: \"red\" }}>Uh oh - something went wrong!</p>}\n        <p className=\"credits\">Powered by <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://numbersapi.com\">NumbersAPI</a> without <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/FBW-12/numbers-api-proxy\">CORS</a></p>\n      </header>\n    </div >\n  );\n\n}\n\n// Extracting Data with mapStateToProps\nconst mapStateToProps = state => {\n  return {\n    fetching: state.fetching,\n    message: state.message,\n    error: state.error\n  };\n};\n\n// Dispatching actions with mapDispatchToProps\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRequestNumber: (num) => {\n      console.log(num);\n\n      return dispatch({ type: \"API_CALL_REQUEST\", number: num })\n    }\n  };\n};\n\n// the connect() function connects the React component to the Redux store.\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// import React bindings for Redux\nimport { Provider } from \"react-redux\";\n// import the store\nimport { store } from \"./store\"\n// import App\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}